<%- include("layouts/header")-%>

<div class="fixed inset-0 flex items-center justify-center z-50 overflow-x-hidden overflow-y-auto outline-none focus:outline-none modal-bg">
  <div class="relative w-full h-full flex items-center justify-center">
    <div class="w-auto max-w-md mx-auto">
      <div class="modal-box">
        <div class="text-xl font-semibold mb-4">Confirm User Deletion</div>
        <p class="mb-4">Are you sure you want to delete this user?</p>
        <div class="text-right">
          <button class="btn btn-secondary mr-2" onclick="closeModal()">Cancel</button>
          <a href="#" class="btn btn-error" id="confirmDeleteButton">Delete</a>
        </div>
      </div>
    </div>
  </div>
</div>

<div class="overflow-x-auto">
  <div class="table-container">
    <div class=" overflow-auto">
      <button class="btn btn-accent mx-5 my-3 mt-1">
        <i class="fa-solid fa-user-plus"></i>
        <a href="/insertuser" aria-label="Create User" title="Create User">
          Create User
        </a>
      </button>

    <div class="join relative left-1/2 ml-44">
      <form action="/userlist" method="GET">
        <input type="text" class="input-md" placeholder="Search User by ID" name="q" value="<%= searchQuery %>" autocomplete="off">
        <button type="submit" aria-label="Search" class="search-button"><i class="fa-solid fa-magnifying-glass fa-lg" style="color:#202327"></i></button>
      </form>
    </div>
  </div>

  <table class="table mx-5">
    <thead>
      <tr class="bg-base-300 font-bold text-xl">
        <th class="py-4">ID</th>
        <th>First Name</th>
        <th>Last Name</th>
        <th>Email</th>
        <th class="pl-8 pr-4">Actions</th>
      </tr>
    </thead>
    <tbody>
      <% userList.forEach((user) => { %>
      <tr class="hover text-lg pl-16">
        <td><%= user.id %></td>
        <td><%= user.firstname %></td>
        <td><%= user.lastname %></td>
        <td><%= user.email %></td>

        <td class="join join-vertical lg:join-horizontal space-x-2 lg:space-x-2">
          <button class="btn border-base-100 bg-base-100">
            <a href="/edituser/<%=user.id%>" aria-label="Edit User" title="Edit User">
              <i class="fa-solid fa-user-pen" style="color: #202327;"></i>
            </a>
          </button>

          <button class="btn border-base-100 bg-base-100" aria-label="Delete User" title="Delete User" onclick="openModal('<%= user.id %>')"><i class="fa-solid fa-user-xmark" style="color: #dc2828;"></i></button>
      </td>
      
      
   
      
        </tr>
        <% }) %>
      </tbody>
    </table>
    <div class="pagination centered-buttons">
      <%
        for (let i = 1; i <= totalPages; i++) {
          const isActive = currentPage === i ? 'active' : '';
      %>
      <button class="btn btn-base space-x-2 m-1.5"><a href="/userlist?page=<%= i %>&q=<%= searchQuery %>" class="pagination-button <%= isActive %>"><%= i %></a></button>
      <%
        }
      %>
    </div>
  </div>
</div>


<script>
  // Functions to open and close the modal
  function openModal(userId) {
    const modalBg = document.querySelector('.modal-bg');
    modalBg.style.display = 'block';

    // Set the 'href' attribute of the delete button inside the modal
    const confirmDeleteButton = document.getElementById('confirmDeleteButton');
    confirmDeleteButton.href = `/deleteuser/${userId}`;
  }

  function closeModal() {
    const modalBg = document.querySelector('.modal-bg');
    modalBg.style.display = 'none';
  }

</script>



<!-- 
  <h1>User Database</h1>
    <%= userList.length  %>
    <a href="/insertuser"> Create User</a> 

    
    <ul>
        <% userList.forEach((user) => { %>
          <li>Email: <%= user.email %></li>
          <li>Firstname: <%= user.firstname %></li>
          <li>Lastname: <%= user.lastname %></li>
          
          <li><td><a href="/edituser/<%=user.id%>" class="edit-link" >Edit</a></td></li>
          <li><td><a href="/deleteuser/<%=user.id%>" class="edit-link" >Delete</a></td></li>
          
        <% }) %>
      </ul>


      /// JavaScript code
let currentPage = 1; // Initialize the current page to 1

// Function to update the page number text and load content for the current page
function updatePageNumber() {
  document.getElementById('currentPage').textContent = `Page ${currentPage}`;
  loadContent(currentPage); // Call a function to load content for the current page
}

// Function to handle the previous page button click
document.getElementById('prevPageButton').addEventListener('click', () => {
  if (currentPage > 1) {
    currentPage--;
    updatePageNumber();
  }
});

// Function to handle the next page button click
document.getElementById('nextPageButton').addEventListener('click', () => {
  // You should have a way to determine if there are more pages to navigate to
  // For example, based on the total number of users and items per page
  const morePagesAvailable = true; // Set this based on your logic

  if (morePagesAvailable) {
    currentPage++;
    updatePageNumber();
  }
});

// Function to load content for the specified page
function loadContent(page) {
  // Make an AJAX request to fetch user data for the specified page
  fetch(`/userlist?page=${page}`)
    .then((response) => response.json())
    .then((data) => {
      // Update the user list with the data received from the server
      const userList = data.users;
      const tableBody = document.querySelector('tbody'); // Adjust this selector based on your table structure

      // Clear existing rows in the table body
      tableBody.innerHTML = '';

      // Iterate through the userList and create table rows for each user
      userList.forEach((user) => {
        const row = document.createElement('tr');
        row.className = 'hover text-lg pl-16';

        // Create and populate table cells for each user property (e.g., id, firstname, lastname, email)
        const idCell = document.createElement('td');
        idCell.textContent = user.id;
        // Repeat this for other user properties

        // Append cells to the row
        row.appendChild(idCell);
        // Repeat this for other cells

        // Append the row to the table body
        tableBody.appendChild(row);
      });
    })
    .catch((error) => {
      console.error('Error loading content:', error);
    });
}


// Initial page number display
updatePageNumber();

    -->
      <%- include("layouts/footer") -%> 

